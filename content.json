{"meta":{"title":"Dayn'Night","subtitle":"深夜便利店","description":"买点什么好呢？","author":"Sconosciuti","url":"http://daynnight.io"},"pages":[{"title":"categories","date":"2018-08-17T14:02:04.000Z","updated":"2018-08-17T10:02:29.933Z","comments":false,"path":"categories/index.html","permalink":"http://daynnight.io/categories/index.html","excerpt":"","text":""},{"title":"","date":"2018-08-17T13:58:47.000Z","updated":"2018-08-17T09:59:16.915Z","comments":false,"path":"tags/index.html","permalink":"http://daynnight.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"RouterOS基于Layer7的Netflix智能分流","slug":"RouterOS基于Layer7的Netflix智能分流","date":"2018-08-23T02:49:24.000Z","updated":"2018-08-23T02:48:46.196Z","comments":true,"path":"posts/e0021cb6/","link":"","permalink":"http://daynnight.io/posts/e0021cb6/","excerpt":"","text":"适用对象 有 A, B两条线路，A 延迟低速度快但不能看 Netflix，B 延迟高速度一般但可以看 Netflix。 有 A, B两条线路，A 流量多但不能看 Netflix，B 流量少可以看 Netflix。 我就是想看 A 区的限定内容，但我又不想全局走 A 的代理。 不折腾会死综合征。 …… 本方案优点 精确识别 Netflix 的流量并路由至期望的线路。 使用 Layer 7 正则匹配。 无需更改本机 DNS。 改个 DNS 就能解锁流媒体服务？我就是不想改怎么办？ 地址条目少，性能好。 相比导入全部 AWS IP 段的暴力做法更为优雅。只导入访问需要的地址条目且有效期过后自动移除。 使用时间越久，效果越好。 使用时间越久，精准导入的地址条目越多，下次打开 Netflix 分配的服务器 IP 命中率就越高，效果越好。有点像热力链，地址条目中的 IP 有有效期，当 IP 在有效期内被访问时，自动刷新有效期，有效期结束后自动移除。 本方案缺点 刚设置完成后一段时间打开 Netflix 比较慢。 假设现在有 A, B两条线路，A 为普通线路，B 可看 Netflix。 一开始设备访问 Netflix ，请求走的 A 线路，请求发出去之后 RouterOS 发现是 Netflix 的包，于是进行匹配并路由至 B 线路。 而源地址发生变化导致后续的包全部被丢弃了。 解决办法是耐心等待数据包重传，大概十几二十秒就会打开。或者等个几秒让 RouterOS 添加好地址，直接关掉页面再开即可。 该情况仅发生在第一次打开 Netflix 网页时，后续如果一直看片不关闭网页不会有此现象。 切换区域时打开 Netflix 比较慢。 比如一直用美国线路看美区，有一天换成了香港线路看港区。港区 CDN 用的 PCCW，在美区获得的 address-list 并不适用于港区，需要重新识别并添加进地址列表。 该情况仅发生在换区后第一次打开 Netflix 网页时，后续如果一直看片不关闭网页不会有此现象。 You tell me! 前期准备 已经按照 RouterOS基于目标地址的国内外分流 配置完成。 可用的 Netflix 账号。 加入 Telegram 群 @[CN] RouterOS 交流群 RouterOS 配置获取 Netflix IP 段 限于技术水平，这里采用的方法可能不是最佳实践，有更好用的 IP 来源或更好的处理方式请联系我。 在 bgp.he.net 搜索 Netflix 的 IP 段。一键直达 全选并复制整个页面的内容，粘贴并保存为文本文件，例如netflixraw.txt。 在 Linux 上安装 Aggregate，一个合并 IP 段的工具。 Optimise a list of route prefixes to help make nice short filters. Debian, Ubuntu 1sudo apt install aggregate Redhat, CentOS, Fedora 1sudo yum install aggregate 安装完成后执行以下命令，请确认 netflixraw.txt 在当前目录。 1234echo \"/ip firewall address-list\" &gt; netflix.src &amp;&amp; \\egrep -o '^([0-9]&#123;1,3&#125;\\.)&#123;3&#125;[0-9]&#123;1,3&#125;(\\/([0-9]|[1-2][0-9]|3[0-2]))' netflixraw.txt \\| aggregate -q | sort -n \\| awk -F\\, '&#123;print \"add address=\" $0 \" disabled=no list=netflix\" &#125;' &gt;&gt; netflix.src egrep 正则匹配 IP 段，aggregate 对输出的 IP 段进行合并优化，sort 将结果排序，awk 输出结果到文件。 将netflix.src 文件导入至 RouterOS 即可。懒得动手操作的可以直接复制粘贴下面的。 1234567891011121314151617/ip firewall address-listadd address=23.246.0.0/18 disabled=no list=netflixadd address=37.77.184.0/21 disabled=no list=netflixadd address=45.57.0.0/17 disabled=no list=netflixadd address=64.120.128.0/17 disabled=no list=netflixadd address=66.197.128.0/17 disabled=no list=netflixadd address=69.53.224.0/19 disabled=no list=netflixadd address=103.87.204.0/22 disabled=no list=netflixadd address=108.175.32.0/20 disabled=no list=netflixadd address=179.49.23.0/24 disabled=no list=netflixadd address=185.2.220.0/22 disabled=no list=netflixadd address=185.9.188.0/22 disabled=no list=netflixadd address=192.173.64.0/18 disabled=no list=netflixadd address=198.38.96.0/19 disabled=no list=netflixadd address=198.45.48.0/20 disabled=no list=netflixadd address=207.45.72.0/22 disabled=no list=netflixadd address=208.75.76.0/24 disabled=no list=netflix 数据抓取时间：2018/08/23 07:43 设置 Layer 7 规则请在 RouterOS 的命令行中执行以下命令。 12/ip firewall layer7-protocol add name=&quot;netflix&quot; \\regexp=&quot;netflix.com|nflxext.com|nflxvideo.net|nflxso.net|nflximg.net|netflix.net|netflixdnstest[0-9].com&quot; Netflix L7 匹配规则 设置 Mangle 规则自动添加 Netflix IP 地址请在 RouterOS 的命令行中执行以下命令。 123/ip firewall mangle add chain=prerouting src-address=&quot;需要分流的客户端地址&quot; \\protocol=tcp dst-port=443 layer7-protocol=netflix \\action=add-dst-to-address-list address-list=netflix address-list-timeout=90d 这里解释下 address-list-timeout 这个参数。 引自 Wiki：如果未指定该参数，则该地址将永久保存到硬盘中。如果指定了该参数，则地址将存储在内存中，并在系统重启后删除。 意思就是断电或手动重启后这些地址就会丢失。如果喜欢天天定时重启路由或家里经常断电的话……将这个参数设成 address-list-timeout=none-static 即可。后果是地址列表会慢慢变大不会缩小。 这个值建议 7d 以上，这样命中地址条目的概率比较大。 为 Netflix 流量打上路由标记请在 RouterOS 的命令行中执行以下命令。 1/ip firewall mangle add chain=prerouting src-address=&quot;需要分流的客户端地址&quot; dst-address-list=netflix action=mark-routing new-routing-mark=nfvpn 最后一个参数 new-routing-mark 路由标记可以设成自己喜欢的，这里命名为 nfvpn 设置路由规则请在 RouterOS 的命令行中执行以下命令。 1/ip route add dst-address=0.0.0.0/0 gateway=&quot;可看 Netflix 的接口&quot; check-gateway=ping distance=1 routing-mark=nfvpn 参数 routing-mark 请和上方 new-routing-mark 的值相同。 设置完成效果图如下。有效期我设置了 7 天。 有新增 IP 的时候打开速度会慢一点，只要进了地址列表，速度立马就上来了。 address list 截图对比","categories":[],"tags":[{"name":"RouterOS","slug":"RouterOS","permalink":"http://daynnight.io/tags/RouterOS/"}]},{"title":"RouterOS基于目标地址的国内外分流","slug":"RouterOS基于目标地址的国内外分流","date":"2018-08-21T08:59:06.000Z","updated":"2018-08-22T22:47:14.032Z","comments":true,"path":"posts/536e8593/","link":"","permalink":"http://daynnight.io/posts/536e8593/","excerpt":"","text":"前期准备硬件 Mikrotik 路由器 × 1 –&gt; 请配置完能上网之后直接阅读RouterOS 配置部分 或 RouterOS 虚拟机 × 1 –&gt; 请完整阅读 软件 可用的 L2TP / PPTP / SSTP 账号 × 1 Winbox 点此下载 v3.17 (Windows 平台，用于登录并管理 RouterOS。macOS 和 Linux 需要使用 Wine 或虚拟机) 推荐 L2TP over IPSec。 Telegram加群 @routeroscn 以获得群内各路大佬的帮助。 RouterOS 安装本地VMWare / VMWare ESXi: https://wiki.mikrotik.com/wiki/Manual:CHR_VMWare_installation Hyper-V: https://wiki.mikrotik.com/wiki/Manual:CHR_Hyper-V_installation VirtualBox: https://wiki.mikrotik.com/wiki/Manual:CHR_VirtualBox_installation ProxMox: https://wiki.mikrotik.com/wiki/Manual:CHR_ProxMox_installation 云安装脚本功能 设置默认网关、路由（如果接口名称非 eth0 请手动更改脚本第 4 行） 更改默认用户名及密码防止被空密码登录 禁用 Telnet、FTP 及 API 端口 更改 SSH 默认端口 设置 DNS 服务器为 1.1.1.1 设置 NAT 规则 设定时区及 NTP 对时（使用 ntp1.aliyun.com及 ntp2.aliyun.com，值需为 IP 形式） 12345678910111213141516171819wget https://download2.mikrotik.com/routeros/6.42.7/chr-6.42.7.img.zip -O chr.img.zip &amp;&amp; \\gunzip -c chr.img.zip &gt; chr.img &amp;&amp; \\mount -o loop,offset=33554944 chr.img /mnt &amp;&amp; \\ADDRESS=`ip addr show eth0 | grep global | cut -d' ' -f 6 | head -n 1` &amp;&amp; \\GATEWAY=`ip route list | grep default | cut -d' ' -f 3` &amp;&amp; \\echo \"/ip address add address=$ADDRESS interface=[/interface ethernet find where name=ether1]/ip route add gateway=$GATEWAY/user set [find name=\"admin\"] name=\"root\" password=\"V2ex!\"/ip service disable telnet,ftp,api,api-ssl/ip service set ssh port=36234/ip dns set servers=1.1.1.1/ip firewall nat add chain=srcnat action=masquerade/system clock set time-zone-name=\"Asia/Shanghai\"/system ntp client set primary-ntp=\"120.25.115.20\" secondary-ntp=\"203.107.6.88\" enabled=yes\" &gt; /mnt/rw/autorun.scr &amp;&amp; \\umount /mnt &amp;&amp; \\echo u &gt; /proc/sysrq-trigger &amp;&amp; \\dd if=chr.img bs=1M of=/dev/vda &amp;&amp; \\reboot 安装过程 Digital Ocean 安装 RouterOS 成功登录 脚本执行结果日志 脚本服务商及系统支持列出的为经过测试可用的服务商及对应系统版本。未列出的并不代表不可用。 Digital Ocean Ubuntu 18.04 Ubuntu 16.04.4 阿里云 CentOS7 阿里云专有网络和经典网络均可用。 欢迎加群 @routeroscn 反馈可用服务商和使用问题。 登录 RouterOSWinbox请参阅文章开始“前期准备”部分下载 Winbox。 打开 Winbox，填入路由器 IP、用户名及密码，点击 Add/Set 保存，然后点击 Connect 连接。 如果一字未改使用了本文中的脚本，用户名应为root，密码为V2ex!，注意感叹号为英文字符。 连接完成。 SSHSSH 方式为命令行操作，不建议没有接触过 RouterOS 的用户使用，请使用 Winbox。 网页在浏览器中输入路由器的 IP 即可。打开网页后输入用户名密码登录。 注意：登录后不要进行 Quick Set，请点击右上角的 WebFig 进入完整的设置页面。 请点击 WebFig 获取试用 License虚拟机安装完成后默认是 Free License，每接口限速 1Mbps。请先去官网注册一个 Mikrotik 账号，注册完成后前往/system license登录账号获取 60 天的试用，授权级别选择默认 P1。P1 每端口限速 1Gbps，P10 为 10Gbps。 单击 Renew License 填入 Mikrotik 账号密码后单击 Start 稍等片刻后左下角显示 done License 获取成功 RouterOS 配置连接 L2TP本节以 L2TP 和 Winbox 为例子。PPTP / SSTP / IP Tunnel / Gre Tunnel 等同理。 本节截图以在云上部署的 RouterOS 为例。家庭环境下的 RouterOS 大同小异。 点击PPP，选择 L2TP Client /interface l2tp-client add General 选项卡中的 Name 可以随意填写。 Dial Out 选项卡中请填写 L2TP 服务器地址、L2TP 用户名及密码。如有 IPSec 请选中并填写密钥。 点击 OK 完成设置。 连接状态及当前路由表 获取中国全部 IP 地址并导入 请在 Linux 中执行以下命令。 1234echo \"/ip firewall address-list\" &gt; cnlist.src &amp;&amp; \\echo \"remove [find name=cnlist]\" &gt;&gt; cnlist.src &amp;&amp; \\curl 'https://ispip.clang.cn/all_cn_cidr.txt' \\ | awk -F\\, '&#123;print \"add address=\" $0 \" disabled=no list=cnlist\" &#125;' &gt;&gt; cnlist.src 在当前目录创建 cnlist.src文件，从https://ispip.clang.cn/获取中国 IP 段数据并写入。 因 IP 数据是一直在变动的，建议至少一年更新一次数据，即执行上述命令并导入到 RouterOS。 导入时 CPU 占用可能会瞬间飙升至 100%。 将生成的 cnlist.src文件通过 Files - Upload上传至 RouterOS。 你要是觉得麻烦，也可以直接复制cnlist.src的文件内容，打开 RouterOS 的命令行粘贴进去。然后就可以欣赏像瀑布一样的 Terminal 了。 cnlist.src 上传中 打开命令行窗口（New Terminal），输入 import cnlist.src导入数据。 导入成功截图 设置 Mangle 规则 如果使用本地实体 Mikrotik 路由器，默认网关为 192.168.88.1，局域网段 192.168.88.0/24 请在命令行中执行以下命令。 1/ip firewall mangle add chain=prerouting src-address=192.168.88.0/24 dst-address-list=!cnlist action=mark-routing new-routing-mark=vpn Mangle 规则 该命令为源地址为本地局域网，目标地址不在 cnlist 之内的数据包打上包标记 vpn，你也可以将这个包标记改成你喜欢的名称，比如freedom，但请和下一小节中的路由规则相同。 如果你有一台下载机，不想让下载机的流量走 VPN，可以为其分配一个静态 IP，例如 192.168.88.2。 然后更改 Mangle 规则为 src-address=192.168.88.3-192.168.88.254 如果使用本地虚拟机，请修改以下命令使其符合实际情况。 1/ip firewall mangle add chain=prerouting src-address=源地址，即需要分流的客户端地址 dst-address-list=!cnlist action=mark-routing new-routing-mark=vpn 如果使用云端虚拟机，请修改以下命令使其符合实际情况。 1/ip firewall mangle add chain=prerouting src-address=源地址，即需要分流的客户端地址 dst-address-list=!cnlist action=mark-routing new-routing-mark=vpn 注意：云端 RouterOS 还需要另外设置 VPN 服务端并分配客户端地址段。假设我启用了 L2TP 服务器，分配给客户端的地址段为 192.168.125.0/24，那么上述命令中源地址写成 192.168.125.0/24即可。 如果使用 Gre Tunnel / IP Tunnel ，源地址填写另一端的网段。 设置路由规则请在命令行中执行以下命令。 1/ip route add dst-address=0.0.0.0/0 gateway=l2tp-out1 check-gateway=ping distance=1 routing-mark=vpn 注意，这里的 routing-mark 必须和上一小节中你设置的包标记名称相同。 路由规则 这里配置好之后，国内外分流就已经生效了。 配置防污染 DNS这里仅提供思路，不作具体展开。DNS 请填写至IP - DNS内。 使用公开的防污染 DNS。 优点：即填即用，无需维护，方便省事。 缺点：国内网站解析到的节点可能不是离你最近的节点，国外网站解析到的节点可能不是离你的 VPN 服务器最近的节点。简而言之就是速度和延迟不理想。 自建防污染 DNS。 优点：可以针对个人情况进行优化，国内国外均可解析到最快最好的节点。 缺点：需要配置维护，需要额外的虚拟机/VPS/路由器/etc 使用提供非53端口的 DNS，如 5353 端口，然后设置防火墙规则将 53 端口的 DNS 请求重定向到 5353。 优点：无需维护，方便省事。 缺点：可能会受网络环境影响。 使用1.1.1.1等 DNS，并设置防火墙规则重定向 DNS 请求走 VPN。（dst-nat） 优点：同上。 缺点：VPN 掉线后 DNS 也随之挂掉。（可以设置脚本监控 VPN 接口状态，掉线后自动切换 DNS 服务器和相关防火墙规则） 设置完成请访问 ip111.cn 查看是否显示两个不同的 IP。 检测结果","categories":[],"tags":[{"name":"RouterOS","slug":"RouterOS","permalink":"http://daynnight.io/tags/RouterOS/"}]}]}